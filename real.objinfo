
real.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <daemonn>:
   0:	41 54                	push   %r12
   2:	6a 39                	pushq  $0x39
   4:	5f                   	pop    %rdi
   5:	55                   	push   %rbp
   6:	53                   	push   %rbx
   7:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
   e:	e8 eb 00 00 00       	callq  fe <asm_syscall>
  13:	85 db                	test   %ebx,%ebx
  15:	75 27                	jne    3e <daemonn+0x3e>
  17:	45 31 c0             	xor    %r8d,%r8d
  1a:	31 c9                	xor    %ecx,%ecx
  1c:	31 d2                	xor    %edx,%edx
  1e:	31 f6                	xor    %esi,%esi
  20:	6a 65                	pushq  $0x65
  22:	5f                   	pop    %rdi
  23:	31 c0                	xor    %eax,%eax
  25:	e8 d4 00 00 00       	callq  fe <asm_syscall>
  2a:	6a 12                	pushq  $0x12
  2c:	5a                   	pop    %rdx
  2d:	31 f6                	xor    %esi,%esi
  2f:	6a 3e                	pushq  $0x3e
  31:	5f                   	pop    %rdi
  32:	31 c0                	xor    %eax,%eax
  34:	e8 c5 00 00 00       	callq  fe <asm_syscall>
  39:	e9 b4 00 00 00       	jmpq   f2 <daemonn+0xf2>
  3e:	48 8d 6c 24 0c       	lea    0xc(%rsp),%rbp
  43:	45 31 c0             	xor    %r8d,%r8d
  46:	31 c9                	xor    %ecx,%ecx
  48:	53                   	push   %rbx
  49:	5e                   	pop    %rsi
  4a:	55                   	push   %rbp
  4b:	5a                   	pop    %rdx
  4c:	6a 3d                	pushq  $0x3d
  4e:	5f                   	pop    %rdi
  4f:	31 c0                	xor    %eax,%eax
  51:	e8 a8 00 00 00       	callq  fe <asm_syscall>
  56:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
  5b:	80 7c 24 0c 7f       	cmpb   $0x7f,0xc(%rsp)
  60:	0f 85 80 00 00 00    	jne    e6 <daemonn+0xe6>
  66:	45 31 c0             	xor    %r8d,%r8d
  69:	31 c9                	xor    %ecx,%ecx
  6b:	53                   	push   %rbx
  6c:	5a                   	pop    %rdx
  6d:	6a 18                	pushq  $0x18
  6f:	5e                   	pop    %rsi
  70:	6a 65                	pushq  $0x65
  72:	5f                   	pop    %rdi
  73:	31 c0                	xor    %eax,%eax
  75:	e8 84 00 00 00       	callq  fe <asm_syscall>
  7a:	45 31 c0             	xor    %r8d,%r8d
  7d:	31 c9                	xor    %ecx,%ecx
  7f:	55                   	push   %rbp
  80:	5a                   	pop    %rdx
  81:	53                   	push   %rbx
  82:	5e                   	pop    %rsi
  83:	6a 3d                	pushq  $0x3d
  85:	5f                   	pop    %rdi
  86:	31 c0                	xor    %eax,%eax
  88:	e8 71 00 00 00       	callq  fe <asm_syscall>
  8d:	31 c9                	xor    %ecx,%ecx
  8f:	41 54                	push   %r12
  91:	41 58                	pop    %r8
  93:	53                   	push   %rbx
  94:	5a                   	pop    %rdx
  95:	6a 0c                	pushq  $0xc
  97:	5e                   	pop    %rsi
  98:	6a 65                	pushq  $0x65
  9a:	5f                   	pop    %rdi
  9b:	31 c0                	xor    %eax,%eax
  9d:	e8 5c 00 00 00       	callq  fe <asm_syscall>
  a2:	48 8b 84 24 88 00 00 	mov    0x88(%rsp),%rax
  a9:	00 
  aa:	48 83 e8 38          	sub    $0x38,%rax
  ae:	48 83 f8 03          	cmp    $0x3,%rax
  b2:	77 a7                	ja     5b <daemonn+0x5b>
  b4:	41 54                	push   %r12
  b6:	41 58                	pop    %r8
  b8:	31 c9                	xor    %ecx,%ecx
  ba:	53                   	push   %rbx
  bb:	5a                   	pop    %rdx
  bc:	6a 0d                	pushq  $0xd
  be:	5e                   	pop    %rsi
  bf:	6a 65                	pushq  $0x65
  c1:	5f                   	pop    %rdi
  c2:	31 c0                	xor    %eax,%eax
  c4:	48 c7 84 24 88 00 00 	movq   $0xe7,0x88(%rsp)
  cb:	00 e7 00 00 00 
  d0:	48 c7 84 24 80 00 00 	movq   $0x0,0x80(%rsp)
  d7:	00 00 00 00 00 
  dc:	e8 1d 00 00 00       	callq  fe <asm_syscall>
  e1:	e9 75 ff ff ff       	jmpq   5b <daemonn+0x5b>
  e6:	31 f6                	xor    %esi,%esi
  e8:	6a 3c                	pushq  $0x3c
  ea:	5f                   	pop    %rdi
  eb:	31 c0                	xor    %eax,%eax
  ed:	e8 0c 00 00 00       	callq  fe <asm_syscall>
  f2:	48 81 c4 f0 00 00 00 	add    $0xf0,%rsp
  f9:	5b                   	pop    %rbx
  fa:	5d                   	pop    %rbp
  fb:	41 5c                	pop    %r12
  fd:	c3                   	retq   

00000000000000fe <asm_syscall>:
  fe:	48 89 f8             	mov    %rdi,%rax
 101:	48 89 f7             	mov    %rsi,%rdi
 104:	48 89 d6             	mov    %rdx,%rsi
 107:	48 89 ca             	mov    %rcx,%rdx
 10a:	4d 89 c2             	mov    %r8,%r10
 10d:	4d 89 c8             	mov    %r9,%r8
 110:	0f 05                	syscall 
 112:	c3                   	retq   
